name: Airflow CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
    DOCKER_USERNAME: achevsky
    GIT_USERNAME: kulichevskiy
    IMAGE_NAME: airflow
    EMAIL: alexey.kulichevskiy@gmail.com
    NAME: Alexey Kulichevskiy
jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
      
#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.10'
          
#     #   - name: Install dependencies
#     #     run: |
#     #       pip install -r requirements.txt
          
#       - name: Lint with Flake8
#         run: |
#           pip install flake8
#           flake8 .
          
#       - name: Run tests
#         run: |
#           # Add your commands to run tests here
#           echo "Running tests..."

  build-and-deploy:
    # needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
        - name: Checkout code
          uses: actions/checkout@v4       
        - name: Build and push Docker image
          env:
            IMAGE_TAG: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          run: |
            echo "Image Tag: ${{ env.IMAGE_TAG }}"
            docker build -t ${{ env.IMAGE_TAG }} .
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USERNAME }}" --password-stdin
            docker push ${{ env.IMAGE_TAG }}
        
        - name: Deploy and update code on the server
          uses: appleboy/ssh-action@master
          with:
              host: ${{ secrets.EC2_HOST }}
              username: ubuntu
              port: 22
              key: ${{ secrets.SSH_PRIVATE_KEY }}
              script: |
                # Ensure SSH session to the server is set up correctly
                eval $(ssh-agent -s)
                ssh-keyscan github.com >> ~/.ssh/known_hosts
                
                # Navigate to the project directory
                cd airflow
                
                # Configure Git to use HTTPS with the GitHub PAT for authentication
                git config --global credential.helper 'cache --timeout=300'
                git config --global user.email "${{ env.EMAIL}}"
                git config --global user.name "${{ env.NAME }}"
                
                # This command uses the PAT for HTTPS Git operations
                echo "machine github.com login ${{ env.GIT_USERNAME }} password ${{ secrets.ACCESS_TOKEN }}" > ~/.netrc
                
                # Ensure the repository is initialized and set to the correct remote
                git init
                git remote add origin https://github.com/${{ github.repository }}.git || true
                git remote set-url origin https://github.com/${{ github.repository }}.git
                
                # Fetch and reset to the latest code from the main branch
                git fetch --all
                git reset --hard origin/main
                git clean -fdx

        # - name: Pull the container and restart docker-compose
        #   uses: appleboy/ssh-action@master
        #   env:
        #     IMAGE_TAG: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        #   with:
        #     host: ${{ secrets.EC2_HOST }}
        #     username: ubuntu
        #     port: 22
        #     key: ${{ secrets.SSH_PRIVATE_KEY }}
        #     script: |
        #         export AIRFLOW_IMAGE_NAME=${{ env.IMAGE_TAG }}
        #         export AIRFLOW_UID=$(id -u)
        #         echo -e "AIRFLOW_UID=$(id -u)" > .env
        #         cd airflow

        #         echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USERNAME }}" --password-stdin
        #         docker pull ${{ env.IMAGE_TAG }}
        #         docker-compose down
        #         docker-compose up -d